% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/basic_functions.R
\name{density_estimation}
\alias{density_estimation}
\title{density_estimation}
\usage{
density_estimation(beta_functions, param)
}
\arguments{
\item{beta_functions}{a list (provided by the function compute_beta_functions).}

\item{param}{(optional), a list containing
\describe{
 \item{burnin}{an interger which is the number of iteration to drop (optional)}
 \item{thin}{a numerical value (optional)}
 \item{lims.kde}{a numerical vector (yl,yu) (optional)}
 \item{n}{an integer related to the precision of the heat map (optional)}
 \item{h1}{a numerical value which is the bandwidth of the kernel density estimation for the t-axis (optional)}
 \item{new_grid}{a numerical vector.}
}}
}
\value{
the result of the \code{\link[=kde2d]{kde2d}} function, i.e. an estimate of the
        posterior density on a two-dimensional grid.
}
\description{
compute a graphical representation of the posterior distribution of beta.
}
\details{
The sample is thinned in order to reduce the number of points and
          so the time of the computation of the function \code{\link[=kde2d]{kde2d}}.
}
\examples{
\donttest{
library(RColorBrewer)
data(data1)
data(param1)
res_Bliss_mult <- Bliss_multiple(data=data1,param=param1,density=TRUE)
q <- 1
diff_grid <- diff(param1$grids[[q]])[1]
param1$grids2[[q]] <- c(param1$grids[[q]]-diff_grid/2,
                       tail(param1$grids[[q]],1)+diff_grid/2)
param1$xlim[[q]] <- range(param1$grids2[[q]])
param_density<-list(grid= param1$grids[[q]],
                    iter= param1$iter,
                    p   = param1[["p"]][q],
                    n        = param1[["n"]],
                    thin     = 10,
                    burnin   = param1[["burnin"]],
                    lims.kde = param1$lims.kde[[q]],
                    h1       = param1$h1,
                    new_grid = param1[["new_grid"]],
                    xlim = range(param1$grids[[q]]) + c(-diff_grid,diff_grid),
                    display = FALSE
)
density_estimate <- density_estimation(res_Bliss_mult$beta_functions[[1]],param_density)
image(density_estimate$res.kde2d,col=rev(heat.colors(100)))
}
}
