% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bliss_Simulated_Annealing.R
\name{Bliss_Simulated_Annealing}
\alias{Bliss_Simulated_Annealing}
\title{Bliss_Simulated_Annealing}
\usage{
Bliss_Simulated_Annealing(beta_sample, normalization_values, param,
  progress = FALSE)
}
\arguments{
\item{beta_sample}{a matrix. Each row is a coefficient function computed from the
posterior sample.}

\item{normalization_values}{a matrix given by the function "Bliss_Gibbs_Sampler". XXXXXXX}

\item{param}{a list containing:
\describe{
\item{grid}{a numerical vector, the observation time points.}
\item{burnin}{an integer, the number of iterations to drop from the Gibbs
      sample. (optional)}
\item{iter}{an integer, the number of iteration of the Gibbs Sampler algorithm.}
\item{iter_sann}{an integer, the number of iteration of the Simulated
      Annealing algorithm. (optional)} XXXXXXX
\item{Temp_init}{a non negative value, the initial temperature for the
      cooling function of the Simulated Annealing. (optional)}
\item{k_max}{an integer, the maximum number of intervals. (optional)} XXXXXXX
\item{l_max_sann}{an integer, the maximum value for the parameter l. (optional)} XXXXXXX
\item{basis}{a character vectors, used to compute the coefficient function,
      see the function beta_build. (optional)} XXXXXXX
\item{K}{a vector of integers, corresponding to the numbers of intervals for
      each covariate.}
}}

\item{progress}{a logical value. If TRUE, the algorithm progress is displayed.
(optional)}
}
\value{
a list containing:
\describe{
 \item{Bliss_estimate}{a numerical vector, corresponding to the Bliss estimate
       of the coefficient function.}
 \item{Smooth_estimate}{a numerical vector, which is the posterior expectation
       of beta(t), for each t in the grid ot time points.}
 \item{trace}{Each row is an iteration of the Simulated Annealing algorithm.}
 \item{argmin}{an integer, which is the index of the iteration minimizing
       the Bliss loss.}
}
}
\description{
A Simulated Annealing algorithm to determine the Bliss estimate
             (for only functional covariate), i.e. the minimum of the 
             posterior expectation of the Bliss loss.
}
\examples{
data(data1)
data(param1)
#res_Simulated_Annealing <- Bliss_Simulated_Annealing(beta_functions,param1)
#ylim <- range(c(res_Simulated_Annealing$Bliss_estimate,
 #                res_Simulated_Annealing$posterior_expe))
#plot(param$grid,res_Simulated_Annealing$Bliss_estimate,type="l",ylim=ylim)
#lines(param$grid,res_Simulated_Annealing$posterior_expe,lty=2)
}
