% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Auxiliary_and_graphics_functions.R
\name{diagnostics}
\alias{diagnostics}
\title{diagnostics}
\usage{
diagnostics(chains, param, progress = FALSE)
}
\arguments{
\item{chains}{a list. Each element contains:
\describe{
\item{res.Gibbs_Sampler}{a list resulting of the function Bliss_Gibbs_Sampler.}
}}

\item{param}{a list
\describe{
\item{iter}{an integer, the number of iterations of the Gibbs sampler algorithm.}
\item{burnin}{an integer, the number of iteration to drop from the Gibbs
      sample. (optional)}
\item{K}{a vector of integers, corresponding to the numbers of intervals for
      each covariate.}
\item{p}{XXXXXX}
\item{ts}{a vector. The sample of time points t_j used for compute some diagnostics of beta(t_j). (optional)}
\item{l_ts}{an integer, the number of time points to sample, if ts is not specified. (optional)}
\item{lag_max}{an integer, the maximal lag when compute the autocorrelation of the trace.}
}}

\item{progress}{a logical value. If TRUE, the algorithm progress is progressed.
(optional)}
}
\value{
A list containing the diagnostics which can be plotted with the
        function "plot_diagnostics".
}
\description{
Compute some diagnostics for the chains resulting of the
             function \code{Bliss_Gibbs_Sampler}.
}
\details{
The implementation does not tackle the issue of several
         functional covariates.
}
\examples{
\donttest{
data(data1)
data(param1)
param1$n_chains <- 3
param1$iter <- 1e3
param1$burnin <- 1e2
param1$progress <- FALSE
param1$compute_posterior <- FALSE
res_bliss_chains <- fit_Bliss(data1,param1)
res_diagnostic <- diagnostics(res_bliss_chains$chains,param1)
cols <- c(2:5)
plot(res_diagnostic$hist_mu[[1]],border=0,col=cols[1],main="",xlab="",ylab="")
for(c in 2:3){
   plot(res_diagnostic$hist_mu[[c]],add=TRUE,border=0,col=cols[c])
}
plot(res_diagnostic$density_beta[[4]][[1]],main="",xlab="",ylab="")
for(c in 2:3){
   lines(res_diagnostic$density_beta[[4]][[c]],col=c)
}
}
}
